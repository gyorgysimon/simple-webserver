worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    # perl_modules /opt/app-root/etc/perl;
    # perl_require Version.pm;
    # perl_set $perl_version Version::installed;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';


    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /opt/app-root/etc/nginx.d/*.conf;
	
    #Default server for liveness probe of (yet) unconfigured domain names
    server {
        listen       8080;
        listen       [::]:8080;

        listen       8443;
        listen       [::]:8443;

        server_name  _;

        #Note: to allow connections to outside, run: setsebool -P httpd_can_network_connect 1
        #connect() to XXX failed (13: Permission denied) while connecting to upstream

        location /healthz {
            add_header Content-Type text/plain;
            return 200 'OK';
        }
    }
	
#    server {
#        listen       8080;
#        listen       [::]:8080;
#        listen       8443 ssl;
#        server_name  localhost;

#        ssl_certificate /opt/app-root/etc/certs/localhost/fullchain.pem;
#        ssl_certificate_key /opt/app-root/etc/certs/localhost/privkey.pem;

#        # Certbot settings from https://github.com/certbot/certbot/blob/master/certbot-nginx/certbot_nginx/_internal/tls_configs/options-ssl-nginx.conf
#        ssl_session_cache shared:le_nginx_SSL:10m;
#        ssl_session_timeout 1440m;
#        ssl_session_tickets off;
#        ssl_protocols TLSv1.2 TLSv1.3;
#        ssl_prefer_server_ciphers off;
#        ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";
#        # end of Certbot settings

#        # Redirect non-https traffic to https
#        #if ($scheme != "https") {
#        #    return 301 https://$host$request_uri;
#        #}

#        location /teszt {
#            add_header Content-Type text/plain;
#            return 200 'Szervusz';
#        }

#    }

}
